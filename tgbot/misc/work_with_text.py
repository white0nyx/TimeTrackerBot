from tgbot.misc.analytics import get_total_analytics


def is_valid_time(str_time: str, for_edit_time=False):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –≤–≤–µ–¥—ë–Ω–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏"""
    if str_time.isdigit() or str_time.replace('-', '', 1).isdigit():

        if for_edit_time and (1 <= int(str_time) <= 24):
            return True

        elif for_edit_time and not (1 <= int(str_time) <= 24):
            return '‚ö† –î–∞–Ω–Ω—ã–µ –≤–≤–µ–¥–µ–Ω—ã –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!\n\n' \
                   '–ß–∏—Å–ª–æ —á–∞—Å–æ–≤ –¥–æ–ª–∂–Ω–æ –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –ø—Ä–æ–º–µ–∂—É—Ç–∫–µ –æ—Ç 1 –¥–æ 24 –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ\n' \
                   '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥'

        elif not for_edit_time and int(str_time) < 0:
            return '‚ö† –î–∞–Ω–Ω—ã–µ –≤–≤–µ–¥–µ–Ω—ã –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!\n\n' \
                   '–ß–∏—Å–ª–æ —á–∞—Å–æ–≤ –¥–æ–ª–∂–Ω–æ –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –ø—Ä–æ–º–µ–∂—É—Ç–∫–µ –æ—Ç 1 –¥–æ 24 –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ\n' \
                   '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥'

        else:
            return True

    if str_time.count(':') != 2 or not str_time.replace(':', '').isdigit():
        return '‚ö† –î–∞–Ω–Ω—ã–µ –≤–≤–µ–¥–µ–Ω—ã –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!\n\n' \
               '–ù–µ —Å–æ–±–ª—é–¥—ë–Ω —Ñ–æ—Ä–º–∞—Ç —á—á:–º–º:—Å—Å\n\n' \
               '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥'

    h, m, s = str_time.split(':')

    if not h.isdigit():
        return '‚ö† –î–∞–Ω–Ω—ã–µ –≤–≤–µ–¥–µ–Ω—ã –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!\n\n' \
               '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–µ–ª—ã–º –Ω–µ–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º\n\n' \
               '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥'

    if for_edit_time and int(h) > 24:
        return '‚ö† –î–∞–Ω–Ω—ã–µ –≤–≤–µ–¥–µ–Ω—ã –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!\n\n' \
               '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤ –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å 24 —á–∞—Å–∞'

    if not m.isdigit() or int(m) > 59:
        return '‚ö† –î–∞–Ω–Ω—ã–µ –≤–≤–µ–¥–µ–Ω—ã –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!\n\n' \
               '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–Ω—É—Ç –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º, ' \
               '–∫–æ—Ç–æ—Ä–æ–µ –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–µ–≤—ã—à–∞—Ç—å 59 –∏–ª–∏ –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º\n\n' \
               '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥'

    if not s.isdigit() or int(s) > 59:
        return '‚ö† –î–∞–Ω–Ω—ã–µ –≤–≤–µ–¥–µ–Ω—ã –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!\n\n' \
               '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ–∫—É–Ω–¥ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º, ' \
               '–∫–æ—Ç–æ—Ä–æ–µ –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–µ–≤—ã—à–∞—Ç—å 59 –∏–ª–∏ –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º\n\n' \
               '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥'

    time_in_seconds = int(h) * 3600 + int(m) * 60 + int(s)
    if for_edit_time and time_in_seconds > 86_400:
        return '‚ö† –î–∞–Ω–Ω—ã–µ –≤–≤–µ–¥–µ–Ω—ã –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!\n\n' \
               '–£–∫–∞–∑—ã–≤–∞–µ–º–æ–µ –≤—Ä–µ–º—è –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å 24 —á–∞—Å–∞'

    return True


def get_the_time_in_seconds(str_time: str):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö –∏–∑ —Å—Ç—Ä–æ–∫–∏ —á—á:–º–º:—Å—Å"""
    if str_time.isdigit() or str_time[1:].isdigit():
        return int(str_time) * 3600

    time_parts = str_time.split(':')
    h, m, s = tuple(map(int, time_parts))
    time_in_seconds = h * 3600 + m * 60 + s

    return time_in_seconds


def get_time_in_str_text(sec):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ —á—á:–º–º:—Å—Å –∏–∑ —Å–µ–∫—É–Ω–¥"""
    # sec = sec % (24 * 3600)
    hour = sec // 3600
    sec %= 3600
    minutes = sec // 60
    sec %= 60
    return "%02d:%02d:%02d" % (hour, minutes, sec)


def get_statistic(user_id, categories):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    text = 'üìà –í–∞—à–∞ –æ–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n\n'

    user_statistic = get_total_analytics(user_id)
    total_time = get_time_in_str_text(user_statistic.get('total_time'))
    time_before_bot = get_time_in_str_text(user_statistic.get('time_before_bot'))
    time_after_bot = get_time_in_str_text(user_statistic.get('time_after_bot'))
    total_sessions = user_statistic.get('total_sessions')
    current_series = user_statistic.get('current_series')
    max_series = user_statistic.get('max_series')
    time_per_day = get_time_in_str_text(user_statistic.get('time_per_day'))
    average_time_in_category = get_time_in_str_text(user_statistic.get('average_time_in_category'))
    count_categories = user_statistic.get('count_categories')
    member_since = user_statistic.get('member_since').split()[0]

    text += f'‚è± –í—Ä–µ–º—è\n' \
            f'‚îå–ü–æ—Ç—Ä–∞—á–µ–Ω–æ –≤—Ä–µ–º–µ–Ω–∏: {total_time}\n' \
            f'‚îú–î–æ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {time_before_bot}\n' \
            f'‚îî–ü–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {time_after_bot}\n\n' \
            f'üî• –°–µ—Å—Å–∏–∏ –∏ —Å–µ—Ä–∏–∏\n' \
            f'‚îå–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ—Å—Å–∏–π: {total_sessions}\n' \
            f'‚îú–¢–µ–∫—É—â–∞—è —Å–µ—Ä–∏—è: {current_series}\n' \
            f'‚îî–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å–µ—Ä–∏—è: {max_series}\n\n' \
            f'üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞\n' \
            f'‚îå–í—Ä–µ–º—è –≤ –¥–µ–Ω—å: {time_per_day}\n' \
            f'‚îú–í—Ä–µ–º—è –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—é: {average_time_in_category}\n' \
            f'‚îî–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {count_categories}\n\n' \
            f'üìì –ö–∞—Ç–µ–≥–æ—Ä–∏–∏\n'

    for category in categories:
        text += f'{category["name"]} - {get_time_in_str_text(category["seconds"])}\n'

    text += f'\nüë§ –ü–æ–¥–ø–∏—Å—á–∏–∫ —Å {member_since}\n\n'

    return text


def get_category_info_message(category_n: str, categories: list):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –µ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ Inline-–∫–Ω–æ–ø–∫—É –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
    category = {}
    for category in categories:
        if category['callback_data'] == category_n:
            break
    category_name = category.get("name")
    category_all_time = get_time_in_str_text(category.get('seconds'))

    text = f'{category_name}\n\n' \
           f'–í—Å–µ–≥–æ –ø–æ—Ç—Ä–∞—á–µ–Ω–æ –≤—Ä–µ–º–µ–Ω–∏: {category_all_time}'

    return text


def get_word_end_vp(minutes: int):
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ª–æ–≤–æ –º–∏–Ω—É—Ç—ã –≤ –≤–∏–Ω–∏—Ç–µ–ª—å–Ω–æ–º –ø–∞–¥–µ–∂–µ"""
    ends = {'0': '–º–∏–Ω—É—Ç',
            '1': '–º–∏–Ω—É—Ç—É',
            '2': '–º–∏–Ω—É—Ç—ã',
            '3': '–º–∏–Ω—É—Ç—ã',
            '4': '–º–∏–Ω—É—Ç—ã',
            '5': '–º–∏–Ω—É—Ç',
            '6': '–º–∏–Ω—É—Ç',
            '7': '–º–∏–Ω—É—Ç',
            '8': '–º–∏–Ω—É—Ç',
            '9': '–º–∏–Ω—É—Ç'}

    str_number = str(minutes)

    if str_number[-2:] in ('11', '12', '13', '14'):
        return '–º–∏–Ω—É—Ç'

    else:
        return ends.get(str_number[-1])


def get_word_end_rp(minutes: int):
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ª–æ–≤–æ –º–∏–Ω—É—Ç—ã –≤ —Ä–æ–¥–∏—Ç–µ–ª—å–Ω–æ–º –ø–∞–¥–µ–∂–µ"""
    ends = {'0': '–º–∏–Ω—É—Ç',
            '1': '–º–∏–Ω—É—Ç—ã',
            '2': '–º–∏–Ω—É—Ç',
            '3': '–º–∏–Ω—É—Ç',
            '4': '–º–∏–Ω—É—Ç',
            '5': '–º–∏–Ω—É—Ç',
            '6': '–º–∏–Ω—É—Ç',
            '7': '–º–∏–Ω—É—Ç',
            '8': '–º–∏–Ω—É—Ç',
            '9': '–º–∏–Ω—É—Ç'}

    str_number = str(minutes)

    if str_number[-2:] in ('11', '12', '13', '14'):
        return '–º–∏–Ω—É—Ç'

    else:
        return ends.get(str_number[-1])


def get_text_category_operations(operations, category_name, serial_number=None):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 10 –æ–ø–µ—Ä–∞—Ü–∏—è—Ö"""
    if serial_number:
        operation = operations[0]

        seconds = operation.get("seconds")
        date = f"{operation.get('date')} {operation.get('end')}"

        if operation.get('handmade') is True:
            return f'{serial_number}. ‚úã –î–æ–±–∞–≤–ª–µ–Ω–æ –≤—Ä—É—á–Ω—É—é {get_time_in_str_text(seconds)}\n' \
                   f'–î–∞—Ç–∞: {date}\n\n'

        else:
            return f'{serial_number}. ‚è± –î–æ–±–∞–≤–ª–µ–Ω–æ —á–µ—Ä–µ–∑ —Ç–∞–π–º–µ—Ä {get_time_in_str_text(operation.get("seconds"))}\n' \
                   f'–î–∞—Ç–∞: {date}\n\n'

    text = f'{category_name}\n' \
           f'–ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏:\n\n'
    for counter, operation in enumerate(operations[-10:], start=1):

        seconds = operation.get("seconds")
        date = f"{operation.get('date')} {operation.get('end')}"

        if seconds is None:
            continue

        if operation.get('handmade') is True:
            text += f'{counter}. ‚úã –î–æ–±–∞–≤–ª–µ–Ω–æ –≤—Ä—É—á–Ω—É—é {get_time_in_str_text(seconds)}\n' \
                    f'–î–∞—Ç–∞: {date}\n\n'

        else:
            text += f'{counter}. ‚è± –î–æ–±–∞–≤–ª–µ–Ω–æ —á–µ—Ä–µ–∑ —Ç–∞–π–º–µ—Ä {get_time_in_str_text(operation.get("seconds"))}\n' \
                    f'–î–∞—Ç–∞: {date}\n\n'

    return text
