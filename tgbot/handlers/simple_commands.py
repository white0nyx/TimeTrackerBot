# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø—Ä–æ—Å—Ç—ã—Ö –∫–æ–º–∞–Ω–¥
import datetime
import json

from aiogram import Dispatcher
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Command
from aiogram.types import Message

from tgbot.keyboards.reply import main_keyboard
from tgbot.misc.states import States


async def start_command(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start"""
    await message.answer('üëã')

    await message.answer('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç '
                         '–≤–∞–º –≤–µ—Å—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤–∞—à–µ–≥–æ –ø–æ—Ç—Ä–∞—á–µ–Ω–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏!\n\n'
                         '–ß—Ç–æ–±—ã –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å, —á—Ç–æ –¥–µ–ª–∞–µ—Ç —ç—Ç–æ—Ç –±–æ—Ç, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π <b><i>/help</i></b>.',
                         reply_markup=main_keyboard)

    user_id = message.from_user.id
    username = message.from_user.username
    full_name = message.from_user.full_name

    with open('data/users.json', 'r+', encoding='utf-8') as db:
        users = json.load(db)

        if str(user_id) not in users.keys():
            users[user_id] = {'user_data': {'id': user_id, 'username': username, 'full_name': full_name},
                              'categories': []}

        db.seek(0)
        json.dump(users, db, indent=4, ensure_ascii=False)


async def help_command(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /help"""
    await message.answer('–ö–æ–≥–¥–∞-–Ω–∏–±—É–¥—å —è –Ω–∞–ø–∏—à—É –∑–¥–µ—Å—å —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –ø–æ–º–æ–≥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º')


async def my_data_command(message: Message, state: FSMContext):
    """–í—ã–≤–æ–¥ –≤—Å–µ—Ö —Å–æ—Ö—Ä–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Å—Ç–µ–π—Ç–∞"""
    async with state.proxy() as data:
        await message.answer(str(dict(data)).replace("'", '"').replace('None', 'null'))


def register_all_simple_commands(dp: Dispatcher):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö –ø—Ä–æ—Å—Ç—ã—Ö –∫–æ–º–∞–Ω–¥"""
    dp.register_message_handler(start_command, Command('start'), state=[None, States.my_categories])
    dp.register_message_handler(help_command, Command('help'), state=[None, States.my_categories])
    dp.register_message_handler(my_data_command, Command('my_data'), state=[None, States.my_categories])
